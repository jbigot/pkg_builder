#!/usr/bin/env python3
from subprocess import run

from distinfo import ReleaseInfo, distributions


def main():
    for distrib in distributions():
        for release in distrib.releases(eoled=False):
            release_id = release.id
            builder = 'rpm_builder'
            if 'debian' in distrib.id_like:
                release_id = release.codename
                builder = 'deb_builder'
            docker_image = 'pdidevel/'+distrib.id+'_builder:'+release_id
            docker_release = release_id
            if 'debian' == distrib.id:
                docker_release = docker_release+'-slim'
            print("\n\n   ===> docker build "+docker_image+" <===\n")
            res = run(['docker', 'build', '--force-rm', '-t', docker_image,
                       '--build-arg', 'DIST_ID='+distrib.id,
                       '--build-arg', 'DIST_RELEASE='+docker_release,
                       '--build-arg', 'DIST_CODENAME='+str(release.codename),
                       builder]).returncode
            if res == 0:
                if release.codename is not None and release_id != release.codename:
                    print("\n\n   ===> docker tag "+'pdidevel/'+str(distrib.id)+'_builder:'
                          +str(release.codename)+" <===\n")
                    res += run(['docker', 'tag', docker_image,
                            'pdidevel/'+str(distrib.id)+'_builder:'+str(release.codename)]).returncode
                if release.suite is not None:
                    print("\n\n   ===> docker tag "+'pdidevel/'+distrib.id+'_builder:'
                          +release.suite+" <===\n")
                    res += run(['docker', 'tag', docker_image,
                            'pdidevel/'+distrib.id+'_builder:'+release.suite]).returncode
                if (release.supported() and
                        all([r <= release for r in distrib.releases(supported=True)])):
                    print("\n\n   ===> docker tag "+'pdidevel/'+distrib.id+'_builder:latest <===\n')
                    res += run(['docker', 'tag', docker_image,
                            'pdidevel/'+distrib.id+'_builder:latest']).returncode
            if res == 0:
                print("\n\n   ===> DONE buidling "+docker_image)
            else:
                print("\n\n   ===> ERROR buidling "+docker_image, res)


if __name__ == '__main__':
    main()
